The increased demand for delivering products with faster time to market and increasing development costs has put pressure on many software companies to find new strategies for developing software products Companies struggle to remain competitive using the existing closed model of innovation and need to combine the internal ideas with external ideas. These strategies entail harnessing external ideas while leveraging their in-house R&D outside their current operations . One of the possible ways to reduce the development costs and shorter the time to market is to use Open Innovation (OI), coined by Chesbrough, to harvest the external ideas. OI is defined as ‘‘a distributed innovation process based on purposively managed knowledge flows across organizational The associate editor coordinating the review of this manuscript and approving it for publication was Xiaobing Sun . boundaries, using pecuniary and non-pecuniary mechanisms in line with the organization’s business model’’]. Companies are constantly reevaluating their strategies to generate new ideas and create value by bringing these ideas to market. Gassmann et al. described three forms of open innovation processes: (1) The outside-in process: Enriching a company’s own knowledge base by using external knowledge sourcing, which may increase a company’s innovativeness. (2) The inside-out process: The external exploitation of ideas by opening up the development to the external environment. (3) The coupled process: The combination of outside-in and inside-out by working in alliances with other companies using Open Source Software (OSS) ecosystems. OSS ecosystems are introduced as one of the most attractive domains in the software ecosystem field which covers a wide range of software projects in the software engineering domain and is not limited to a few projects For instance, some common  _ This work is licensed under a Creative Commons Cloud services model. examples are platforms, libraries, operating systems, modules and components, and tools The strategies of developing software have changed over time in which companies have focused on software ecosystems instead of having a software product line in every category Therefore, software development is not an in-house development in a single organization anymore. Companies co-develop their products in collaboration with users and developers in OSS communities. OSS is the most notable example of switching from a conventional Closed Innovation model to an Open Innovation model and has characteristics that resemble a software ecosystem For example, IBM has supported Linux by investing $100 million a year for more than a decade and also donated hundreds of patents to challenge the dominance of Microsoft Windows . One of the biggest advantages of using the Open Innovation model is to share the risk and development cost of the platform Other firms such as Nokia, Intel, and Hitachi made substantial investments in development of Linux along with IBM and the overall investment in Linux was more than $1 billion a year . The Linux platform development allowed companies to build their applications and services on top of it. Specifically, IBM’s investment in Linux provided them a platform to experiment with other companies to strengthen its own business model by running its own software solutions on top of Linux [17]. In this study, we created an innovation platform prototype for the case company which can be used by the company’s developers to build, deploy and run their own applications. Currently, the case company is using Amazon Web Services (AWS) in their context for running applications, which requires significant skills, resources and incurs licensing costs. The objective behind building an innovation platform prototype for Axis is to be able to create fast prototypes and quickly get customer feedback and to reduce the development time and cost. This paper is structured as follows. Section II explains the related work and section III outlines the research methodology. Section IV describes the implementation and section V presents the evaluation of the prototype from the focus group and interviews. Finally, sections VI and VII present a discussion followed by conclusions in relation to the research questions respectively.

This section describes the case company. Furthermore, we present the research questions and the research design is presented followed by validity threats. A. CASE COMPANY Axis Communications AB was founded in 1984 and launched the world’s first network camera in 1996. Axis is a market leader in network surveillance video cameras. Axis has about 3200 employees and has partners in a number of countries around the world. The company has been using and contributing to open source software (OSS) communities (e.g., Jenkins, GStreamer etc.) and is also involved in discussions with other companies about open source strategies. Whenever possible, the preferred option is usually an open source alternative. Axis has well defined OSS processes and strategies when it comes down to using or releasing code to OSS communities. Axis uses open source code of Linux and has been a member of the Linux Foundation since January 2013.1 B. RESEARCH QUESTIONS (RQs) Brad et al., developed a platform for open innovation that brings together companies of different sizes that contribute information. The platform is only supportive in the development of software and not usable on its own. In this paper, we introduced an independent platform which can deploy and run applications. The platform helps spur innovation by enabling faster prototyping. The research questions were identified as a mean to fulfill and achieve a platform suitable to Axis. The research 1Linux Foundation Announces New Members: https://www. linuxfoundation.org/press-release/2013/01/linux-foundation-announcesnew-members/, retrieved 30 May 2019 questions were improved through early interviews with different stakeholders at the company in order to ensure their relevance. There is a need to understand the potential drivers (RQ1) to create the innovation platform prototype and what value it offers for Axis. The initial reason for this study was related to making it easy to add new functionality to the products that Axis offers but what additional drivers exist at Axis to pursue this? Furthermore, there is a need to understand what potentials such a platform prototype could bring, resulting in the following three research questions: RQ1 What are the drivers for Axis to create an innovation platform prototype? RQ2 How can an innovation platform be created and evaluated to facilitate web-based deployments at Axis? RQ3 What value does the innovation platform create for Axis? RQ2 deals with the creation of an innovation platform prototype based on the requirements stated in section III-C in order to deploy web-based applications. Furthermore, the developed proof of concept for the innovation platform was evaluated in the focus group. Finally, RQ3 addresses the value created by the new prototype for Axis, using the software value map . C. DESIGN SCIENCE BASED IMPLEMENTATION This section presents the design science approach based on the guidelines by Hevner. Rigor and relevance are two important criteria in empirical research settings. There is a risk that one of the criteria becomes more susceptible to validity threats in order to strengthen the other. For example, if a study is too focused on rigor and the theoretical contributions, the design of the artifact and its relevance to the industry may become less significant. On the other hand, if the research design is too pragmatic and flexible, rigor and quality of the artifact’s underlying design knowledge may become subjective. Hence, we choose a design science research approach to balance the needs of industry and academics. This study balances both rigor and relevance when design cycles are conducted. An overview of the research methodology can be seen in Figure 1. The design science framework has three major components: 1) environment, 2) research and 3) knowledge base. First, the environment defines the problem space in which the artifact is relevant. In this case, the study elicited the requirements from experts at Axis to improve the deployment of web-based projects by developing an innovation platform based on Heroku. The goal of the relevance cycle is to identify the business needs of Axis in order to develop an artifact (innovation platform prototype) which is in line with Axis’ business needs. The details of the experts involved in the relevance cycle are mentioned in Table 2. Second, the research process entails the implementation and evaluation of an innovation platform in a design cycle. The purpose of the design cycle is to iteratively  _ 10807  _ FIGURE 1. Overview of the research method. develop and evaluate the prototype based on the refined needs of an innovation platform. A detailed assessment of the prototype was performed in a focus group at Axis. The details of the focus group participants and evaluation of the innovation platform can be seen in Table 3 and section V respectively. Finally, knowledge base represents the underlying theory used for the development of an innovation platform. This study uses Open Innovation by extracting the knowledge from outside Axis using Heroku to develop the innovation platform and combine it with the internal knowledge of experts to reduce the complexity of web deployment in their development process. The rigor cycle was achieved by using the existing literature on PaaS cloud and challenges associated with it. The related work outlines the knowledge base for the development of the innovation platform. Moreover, the study performed semi-structured interviews to refine the requirements and identify the value created by the implementation of the innovation platform  . Designing an artifact: Discussions with experts at Axis lead to designing an artifact, which refers to the implementation of an innovation platform prototype for web-based deployments. The purpose of the innovation platform is to provide easy to use functionality to developers who want to create cloud services that use Axis cameras. A relevant community of developers and managers was identified at Axis to better understand the requirements for implementing the innovation platform. The community mentioned several requirements of the innovation platform that should be fulfilled in order for the prototype to be considered useful by Axis’ standards. The following requirements are identified for the implementation of the artifact: Req 1 It should be fit for larger systems. Applications built upon the platform should be able to handle a large number of cameras and/or users. Req 2 The build and deploy should be fast. It should be possible to quickly set up an application that can be deployed to receive prompt customer feedback. Req 3 Deploying and installing applications using the prototype shall be easy. Req 4 There should be a system for receiving payments in place so that one does not have to implement this. Req 5 It should be possible to migrate an application to another cloud service if necessary. Req 6 It should be possible to have support for older cameras using the prototype thus it should be backward compatible. Req 7 The platform should work as intended and should not have bugs or unexpected behavior, i.e. it should be reliable. Req 8 The functionality of the innovation platform should be comparable to similar alternatives, not less. Req 9 The prototype should be cost competitive compared to other solutions. The detailed implementation of the artifact can be found in section V. D. SELECTION OF THE INTERVIEWEES AND THE FOCUS GROUP PARTICIPANTS This section provides the demographics of the interviewees and the focus group participants to answer the research questions. 1) INTERVIEWS We conducted five semi-structured interviews in order to investigate web-based deployment in product development for Axis. This resulted in a better understanding of the drivers (RQ1) and value for Axis (RQ3). The rationale for the selection of interviewees was to select targets with different 10808  _  _ TABLE 2. Demographics of the interviewees. roles to understand both technical and managerial aspects of the implemented prototype, including targets from the cloud service department. The engineers were all from different departments of the company. Table 2 shows the demographics of the interviewees. An initial set of questions was formulated and these questions were continuously improved and validated by all authors, as specified in section III-E3. The semistructured interviews were conducted based on the following pointers. 1) Demographics 2) Drivers for developing an innovation platform 3) Challenges of using an existing platform 4) Value in creating a new innovation platform All interviews were recorded, transcribed and then summarized. Furthermore, the summaries of the transcriptions were validated by multiple researchers. We performed a thematic analysis on the qualitative data collected through interviews, in which five distinct themes were identified (see Table 5). Later, the statements were labeled with the set of themes. The results of this analysis are presented in section V-A. TABLE 3. Demographics of the focus group participants. 2) FOCUS GROUP A focus group meeting with six people was arranged to evaluate the developed prototype. The demographics of the focus group can be found in Table 3. The reason for the composition of the focus group was to have engineers from different departments give feedback on the viability and feasibility of the prototype. The focus group started off with a short presentation which included a demo of the proof of concept. Afterwards, the participants were given a link to a survey to evaluate the prototype. Finally, a discussion was held among the focus group participants based on the responses. The discussion was recorded and transcribed and then validated after which statements from the discussion were labeled with the themes found during the interviews. The results of the innovation platform prototype can be seen in section V. E. VALIDITY THREATS This section explains the validity threats pertaining to the study. We addressed four types of validity threats with their mitigation strategies. 1) INTERNAL VALIDITY Internal validity concerns causal relationships and the introduction of potential confounding factors. The motives behind the implementation of the prototype were understood and documented in the review protocol document to avoid misunderstanding the objectives of the study. The review protocol document was also verified for its objectives in a meeting with Axis. Furthermore, authors have conducted multiple interviews before and after the implementation of the prototype to ensure the right drivers for the implementation of the prototype. This helped us in reducing the risk of introducing the possible confounding factors which could affect the outcome of the study. Furthermore, we used data triangulation and observer triangulation during the study. First, we collected data from multiple sources namely interviews and a focus group. Second, we involved multiple researchers in analyzing the data independently in order to avoid the subjective interpretation of the data. Finally, the focus group participants are composed of mostly software engineers and lacked a business manager to evaluate the business value more objectively. Therefore, the aforementioned limitation may be seen as a threat to the internal validity of the study. 2) EXTERNAL VALIDITY This refers to what extent the findings of a study can be generalized to other contexts. The scope of this study is limited to companies using software development as their key strategic business area, to accelerate their internal innovation process using open innovation. The selected case company focuses on software development for security cameras with the software development as a key strategic area. Therefore, the results of this study may be generalized to companies involved in the development of embedded devices. More specifically, results may be useful for the companies trying to innovate tools used for prototyping of new ideas. 3) CONSTRUCT VALIDITY This refers to what extent the operational measures investigated in the study really represent what a researcher has in mind, and what is investigated according to the research questionsFirst, informal meetings were conducted with two technical developers from Axis before implementing the prototype and understanding the motives behind the implementation of a prototype to try out new ideas for the camera. In order to understand the business and technical benefits of the prototype implementation, Axis gave access to the right set of interviewees (e.g., software developers and managers) and participants for the interviews and focus groups. This enabled the researchers to investigate the technical and business aspects of the prototype implementation as per  _ 10809  _ TABLE 4. Comparison of different PaaS solutions for implementing the prototype. ’+’ is considered the best option and ’-’ is the worst option while ’0’ is neutral. research questions. Second, to avoid interviewees guessing the research questions, an email prior to the interview was sent to them to familiarize them with the context of the interview instead of sending the exact interview questionnaire. Furthermore, the names of all the interviewees were kept anonymous to ensure their privacy. 4) RELIABILITY The reliability refers to what extent the data and the analysis are dependent on the specific researcher, and the ability to replicate the study In the study, the first two authors individually transcribed the interviews, sent back to interviewees for validation, analyzed the data and later on used that data for the thematic analysis. The first two authors kept track of all the qualitative and quantitative data collected from interviews and the workshop in a systematic way to be able to go back for validation. The third author was involved in designing the interviews and the workshop. Furthermore, validation of the data collected from the interviews and the workshop was also performed by the third author in order to make the findings more reliable. The study design and findings are kept as transparent as possible between the researchers and Axis. Finally, results were shared and presented at Axis in a seminar prior to writing a paper. However, the study has a limitation in terms of disclosing the management’s decision regarding the future direction of the prototype. IV. IMPLEMENTATION OF THE ARTIFACT We considered several available PaaS solutions based on the facets mentioned in Table 4 to select a suitable platform for the implementation of an innovation platform prototype. The considered PaaS platforms included Amazon Elastic Beanstalk, Dokku, Heroku and OpenShift. In Table 4, ‘+’ is considered the best option and ‘-’ is the worst option while ‘0’ is neutral. After the comparison, Heroku turned out to be the best option. Therefore, we chose Heroku to implement the prototype because it offers scalability, decreased complexity, security and payment integration which is more in line with the needs of Axis. Heroku is a container-based PaaS and these containers are known as ‘dynos’ containing the application and all necessary dependencies and run on a shared host. Whenever it is needed, the number of dynos an application runs on can be scaled up or down. Heroku has a wide variety of add-ons that eases the development of an application.2 One example of this is that there are a number of data stores to choose from. Instead of spending time on the implementation of your own data store, you can simply choose one of the available data stores. As a Heroku user, you can also sign up to become an add-on partner and contribute with your own add-ons. Next, an initial architectural overview was set up. Here, the prototype agent enables the usage of Connect APIs and also handles authentication while our prototype communicates with Connect. Connect is a cloud service provided by Axis which runs on AWS and allows remote access to cameras. Therefore, multiple APIs may be used, for instance, upgrading firmware or viewing snapshots, that would otherwise not be possible unless having local network access. Go was chosen as the programming language for the prototype since it is both supported by Heroku and widely used by Axis in cloud development. Furthermore, we ensured that the prototype would be portable to avoid vendor lock-in. This included an investigation into the usage of a Docker image. The actual implementation of the prototype started with a skeleton where endpoints specific to Heroku were implemented, for instance, one endpoint that was needed for a user to start using the prototype or add-on as it is called in Heroku. Next, in order to communicate with Connect, it was necessary to get a session ID from Connect. This first required a client ID and a client secret that was sent to Axis Open ID Connect (OIDC), generating a token that could be sent to Connect. The token would then be verified by Connect after which a session ID would be sent back. The implementation of the authentication sequence can be seen in Figure 3. In the next step, we investigated how to communicate with Connect. This could be done by a direct translation of Connect’s API in the prototype but this would require the implementation of every single possible API call that can be made to Connect. A second option was to create a POST handler which simply received the type of the request and the URL. A third option, which was chosen to be the preferred 2Add-ons: https://elements.heroku.com/addons, retrieved 9 February 2020 10810  _  _ FIGURE 2. Updated architectural overview. option, was letting all calls go to /connect/url, extract the URL and send it to Connect with the same type of HTTP request. This was the preferred option as it allowed a proof of concept to make any available Connect API call to the prototype just as if it had been towards Connect, thus also reducing overhead. An important part during the implementation was to make sure that the prototype is secure. Therefore, a lot of time was spent on authentication and ensuring that all communication with Axis Connect was done using HTTPS. To authenticate users, a cookie is used. If no such cookie exists, a user is redirected to a login page whenever a call on the add-on is made. One way to create additional value with our prototype was to chain API calls available in Axis Connect. One example of such a chained API call was implemented in order to refresh all snapshots of the cameras in a specific folder. A discussion about how API calls may be chained and the additional value of such solutions can be found in section VI. While implementing the prototype, some new aspects came to light, especially regarding authentication and the need for a database. This is reflected in an updated architectural overview, shown in Figure 2. Here, the prototype runs on Heroku and Axis Connect runs on AWS. After setting up the prototype, a proof of concept (PoC) using the prototype was created. This is denoted as PoC in Figure 2. The proof of concept is used to demonstrate how the innovation platform could be used to develop applications quickly and to easily demonstrate a proof of concept. The theme of the proof of concept was the website of a grocery store. For instance, in the proof of concept, a revenue counter showing the fictional daily revenue for the grocery store was added. It was also displayed which day of the week the next ‘‘delivery’’ was going to come on. Another proof of concept could be a large parking garage showing the different exits in combination with information about number of free spots and tickets issued. A third is to use AI to analyze facial expressions in real time of window shoppers in a shopping mall. A question that could be raised is what value the prototype provides since API calls sent are simply redirected to Axis Connect. However, the prototype provides authentication of users and enables the possibility to chain API calls, extending functionality without the need to modify Connect. This is  _ 10811  _ FIGURE 3. Sequence diagram. especially interesting if the prototype would be open source, enabling many more programmers to add new functionality. Another benefit of the prototype is that Heroku has a number of other add-ons that could be used in combination with the implemented prototype to further extend the functionality. In the discussion part of this paper, section VI, there is a discussion about the many possibilities created by the prototype and what benefits this may entail for the developer. V. ARTIFACT EVALUATION This section includes the results from the focus group conducted to validate the implemented prototype. The details of the results can be seen in Figure 4. The participants of the focus group regard the prototype as an innovation platform for trying out new ideas. As shown in Figure 4, question 1a, all participants agree (three agree and three strongly agree) that the prototype provides an experimentation layer to test innovative ideas. Furthermore, five of the participants agree or strongly agree that the prototype reduces the deployment complexities (Question 1c) of webbased applications. One participant even stated that prototyping is a lot faster when comparing with the current setup, ‘‘you can just push your application and it is built and released.’’ Another participant is of the opinion that ‘‘it is a really good solution for trying out new ideas but using it in production is a completely different thing. However, it seems only positive for prototyping.’’ It is also worth noting that no one thinks that development of the platform should not continue, instead four agree on and two were neutral about further development (Question 11). Looking at business aspects, four of the participants find the Heroku add-on practical for projects in the future (Question 2, Figure 4). The payment model that was mentioned in several interviews was not a topic of discussion during the focus group, possibly due to the fact that no managers were present. Furthermore, it is very important that the prototype is thoroughly tested before using it for other projects. As one participant puts it, ‘‘For me it is an unknown. So it is something that we need to. . .. Either contain really strictly and test or understand perfectly and then maintain our own branch of it and so on. So, I see the risk as well.’’ Later, the same participant also remarks that ‘‘for actual production you really have to understand how secure is it and it is really important because all the data we handle is really sensitive. So, it is big concern for us.’’ A limitation mentioned during the focus group is that the prototype is dependent on Heroku and that Axis has no control over that platform. Another participant stated that ‘‘we might end up adding another platform dependency’’ This was also a limitation mentioned during the interviews but with regard to Axis Connect instead. How dependent this project is on other projects is therefore something that needs to be investigated further. In relation to drivers of implementing the prototype, three participants of the focus group agree that the innovation platform can very well be seen as a viable complement to Amazon Web Services since it is easier to deploy projects with it. On the other hand, three of the participants took a neutral stance (Question 9, Figure 4). As one of the participants stated, ‘‘it is viable because it is easier and that is mostly I think where its strength lies.’’ There was a discussion on 10812  _  _ FIGURE 4. Focus group results. making this prototype open source in which the participants had different opinions regarding the level of openness. Four of the participants were neutral to the idea of the prototype being open source, while one disagreed and one agreed. A participant stated that ‘‘It all depended on the application. If Axis wants to profit from it, the application should not be open source.’’ Here, the participant refers to an application built upon the prototype. There was also a concern that the addon encroaches too much of Connect. ‘‘The add-on integrates a lot with Connect and Connect isn’t open source. So it  _ 10813  _ TABLE 5. Themes found during the thematic analysis. TABLE 6. Value aspects and its perspectives. might be an example of just. . .We don’t want open source to encroach too much of Connect.’’ Comparing these results to the results from the interviews, the interviewees had some mixed opinions as well. Looking at the results in Figure 4, four were neutral towards open sourcing proof of concepts (Question 5) while when asked whether to open source the prototype (Question 7), the participants were more positive.  In this section the research questions defined in section III-B are discussed based on the results and analysis in section V-A. The research questions are also discussed in relation to existing literature. There were many drivers identified during the interviews and focus group to answer RQ1. Some of the key drivers for building a prototype, as mentioned in V-A4, are 1) enabling faster prototyping and spurring innovation, 2) achieving higher customer satisfaction and 3) reducing the complexity of the deployment process. The main business drivers mentioned seemed to hail from a need to spend less time on aspects of the development process that were deemed nonessential. When showing the deployment process of Heroku 10816  _  _ TABLE 7. Requirements fulfilled by the prototype implementation. to the participants of the focus group the reactions were positive, thus confirming the idea of an easy deployment process being beneficial. The drivers speak to a need for faster development and only focusing on the code, which may lead to faster time to market. If the interviewers were to guess how the drivers would change in the future, it would have to be that as technology accelerates, the need for tools to keep up with the pace becomes an even more relevant aspect. To address RQ2, requirements were elicited from experts to implement the prototype which are defined in section III-C. Both the implementation of the prototype and the analysis from the interviews made it possible to understand whether the requirements are fulfilled and how they are achieved. Through the interviews, four additional requirements were added. Those additional four requirements were enable backward compatibility (Req 6), reliable (Req 7), offer new functionality (Req 8) and cost competitive (Req 9). The first two added requirements were mainly requested from interviewees who had worked with similar platforms before and who valued stability. The last two, new functionality and cost competitive are both business-related suggesting that, if it is supposed to be an alternative, it should be able to compete with similar solutions. Table 7 discusses to what degree all requirements are fulfilled. Regarding the implementation of the prototype, two of the requirements in Table 7 namely Req 3 (easy to use) and Req 7 (Reliable) are marked as partially fulfilled. The participants were positive to the deployment on Heroku and agreed that the add-on could be used to develop prototypes, which indicates it is easy to use. The participants were also positive to the idea of the low downtime of Heroku and the way developers can deploy to Heroku without the target application being inaccessible for users, which both seem to indicate that they find it reliable. The implemented prototype is a Heroku addon that developers may install. There is an apparent need at Axis to offer new functionality compared to other solutions. Authentication towards Connect is an important one as it is not trivial to implement and having an easy API to use for it makes developing an application much faster. To redirect calls to Axis Connect helps with authentication as that is handled by the prototype instead of Axis Connect. To combine API calls to Axis Connect is especially interesting, both for the fact that one may set up large chains of commands into one, thus reducing the amount of programming required. This can be extended to allow for more specific API calls that return the exact value for what has been queried, instead of having to chain many API calls and only use half of the returned information. Another interesting aspect is when considering that you can add computationally heavy operations such as machine learning that could be used in conjunction with API calls. Another great aspect with the prototype is the possibility to add other Heroku add-ons, for instance, there are add-ons for video recording,3 encoding,4 and uploading5 that would provide great functionality when used in conjunction with video from the camera. Both the prototype and the proof of concept was demoed during the focus group meeting. It became apparent that both the interviewees and the focus group members were positive to the concept of the platform. Concerning RQ3, Axis sees the developed prototype as an innovation platform which enabled faster innovation and a shorter release cycle to achieve faster feedback from customers. More specifically, the value proposition becomes more attractive to Axis as it is easier to quickly develop an application to test a new idea. Furthermore, it allows Axis to be less dependent on Amazon for all web-service needs. It might also be attractive for Axis to have the possibility to combine Heroku functionality and other Heroku add-ons in conjunction with the developed cloud application. Looking at 3https://elements.heroku.com/addons/cameratag 4https://elements.heroku.com/addons/pandastream 5https://elements.heroku.com/addons/transloadit  _  _ the value aspects that were found and presented in Table 6, all of these aspects have been fulfilled by the prototype as shown in the Value column of Table 7. However, we received mixed responses about whether or not the prototype and/or proof of concept should be open source. Many participants of the focus group were neutral to the idea of the prototype and/or proof of concept being open source. We interpreted it as the participants are primarily not negative to the idea but there may be more management-related factors at play as to why they feel this way. However, at least for internal use, the participants seem to agree on that it is a very useful platform. There are multiple alternatives as to what parts of the platform could be made open source. The results of the focus group survey whether the add-on or the applications built using the add-on should be open source were very similar. Despite this, one could imagine a scenario in which the more back-end part of the platform, the add-on was closed source and the example application together with any coming applications be made open source to help aid the development of new applications. When it comes to which open source license should be used, Axis has a Github page with several of its open source projects, the licensing across projects varies from MIT to BSD-3-Clause and GPL-2.0.6 VII. CONCLUSION In this study, we have used the design science approach to develop an innovation platform prototype to explore the faster deployment of web-based applications at Axis. The main contribution of this study is the implemented prototype which has the potential to become an add-on for a cloud service that enables developers to set up and use multiple cameras in a cloud environment. A proof of concept was developed to demonstrate the practical application of the prototype. The proof of concept was a mock version of a grocery store website that used the implemented prototype to help show its feasibility. The key drivers for implementing a prototype entails reduced cost, faster time to market and reduced complexity of web-based deployments. The focus group results showed that the participants were positive about using the prototype to quickly experiment and test the business potential of new ideas at Axis. However, there was no consensus regarding whether or not the platform should be open source. VIII. FUTURE WORK As for future work, the innovation platform for web-based deployments can be further developed depending upon the business needs and the management decision. There are several more features of the prototype which could be implemented. For example, the implementation of video streaming from Axis Connect and different pricing plans on the add-on depending upon the usage. Furthermore, we need more validation studies on the innovation platform for future work. There is also a possibility to make more quantitative 6Axis Communications, Github https://github.com/AxisCommunications/, retrieved 31 May 2019 comparisons with the existing cloud solutions as the platform matures and gains traction internally and among the partner companies.
